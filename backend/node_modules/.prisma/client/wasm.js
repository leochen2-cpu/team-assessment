
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.1
 * Query Engine version: 272a37d34178c2894197e17273bf937f25acdeac
 */
Prisma.prismaVersion = {
  client: "6.17.1",
  engine: "272a37d34178c2894197e17273bf937f25acdeac"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  passwordHash: 'passwordHash',
  firstName: 'firstName',
  lastName: 'lastName',
  role: 'role',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TeamScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TeamMemberScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  teamId: 'teamId',
  role: 'role',
  joinedAt: 'joinedAt'
};

exports.Prisma.AssessmentScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  teamId: 'teamId',
  responses: 'responses',
  scores: 'scores',
  completedAt: 'completedAt'
};

exports.Prisma.TeamReportScalarFieldEnum = {
  id: 'id',
  teamId: 'teamId',
  assessmentCycle: 'assessmentCycle',
  teamScore: 'teamScore',
  baseScore: 'baseScore',
  consistencyFactor: 'consistencyFactor',
  penaltyFactor: 'penaltyFactor',
  dimensionScores: 'dimensionScores',
  participationRate: 'participationRate',
  generatedAt: 'generatedAt'
};

exports.Prisma.AccessLogScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  resourceType: 'resourceType',
  resourceId: 'resourceId',
  action: 'action',
  ipAddress: 'ipAddress',
  timestamp: 'timestamp'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  User: 'User',
  Team: 'Team',
  TeamMember: 'TeamMember',
  Assessment: 'Assessment',
  TeamReport: 'TeamReport',
  AccessLog: 'AccessLog'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\huli\\Desktop\\team-assessment\\backend\\node_modules\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\huli\\Desktop\\team-assessment\\backend\\prisma\\schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.17.1",
  "engineVersion": "272a37d34178c2894197e17273bf937f25acdeac",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "sqlite",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": null,
        "value": "file:./dev.db"
      }
    }
  },
  "inlineSchema": "// Prisma Schema - 数据库设计\n\ndatasource db {\n  provider = \"sqlite\" // 使用SQLite，无需安装PostgreSQL，适合快速开始\n  url      = \"file:./dev.db\"\n}\n\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\n// 用户表\nmodel User {\n  id           String   @id @default(uuid())\n  email        String   @unique\n  passwordHash String\n  firstName    String\n  lastName     String\n  role         String   @default(\"MEMBER\") // MEMBER, TEAM_LEAD, ADMIN\n  createdAt    DateTime @default(now())\n  updatedAt    DateTime @updatedAt\n\n  teamMemberships TeamMember[]\n  assessments     Assessment[]\n  accessLogs      AccessLog[]\n\n  @@map(\"users\")\n}\n\n// 团队表\nmodel Team {\n  id          String   @id @default(uuid())\n  name        String\n  description String?\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  members     TeamMember[]\n  assessments Assessment[]\n  reports     TeamReport[]\n\n  @@map(\"teams\")\n}\n\n// 团队成员关系表\nmodel TeamMember {\n  id       String   @id @default(uuid())\n  userId   String\n  teamId   String\n  role     String   @default(\"MEMBER\") // MEMBER, LEAD\n  joinedAt DateTime @default(now())\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n  team Team @relation(fields: [teamId], references: [id], onDelete: Cascade)\n\n  @@unique([userId, teamId])\n  @@map(\"team_members\")\n}\n\n// 评估记录表\nmodel Assessment {\n  id          String   @id @default(uuid())\n  userId      String\n  teamId      String\n  responses   String // JSON字符串: {\"Q1\": 4, \"Q2\": 5, ...}\n  scores      String // JSON字符串: {\"dimensions\": {...}, \"total\": 72.5}\n  completedAt DateTime @default(now())\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n  team Team @relation(fields: [teamId], references: [id], onDelete: Cascade)\n\n  @@map(\"assessments\")\n}\n\n// 团队报告表\nmodel TeamReport {\n  id                String   @id @default(uuid())\n  teamId            String\n  assessmentCycle   String // 例如 \"2025-Q4\"\n  teamScore         Float\n  baseScore         Float\n  consistencyFactor Float\n  penaltyFactor     Float\n  dimensionScores   String // JSON字符串\n  participationRate Float\n  generatedAt       DateTime @default(now())\n\n  team Team @relation(fields: [teamId], references: [id], onDelete: Cascade)\n\n  @@map(\"team_reports\")\n}\n\n// 访问日志表（隐私审计）\nmodel AccessLog {\n  id           String   @id @default(uuid())\n  userId       String\n  resourceType String // \"personal_report\", \"team_report\"\n  resourceId   String\n  action       String // \"view\", \"export\"\n  ipAddress    String?\n  timestamp    DateTime @default(now())\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"access_logs\")\n}\n",
  "inlineSchemaHash": "ef877fd46bb3d4fd05cb387ad942871259c4752a3a3387a827b6d42d6ae61c8e",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"passwordHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"teamMemberships\",\"kind\":\"object\",\"type\":\"TeamMember\",\"relationName\":\"TeamMemberToUser\"},{\"name\":\"assessments\",\"kind\":\"object\",\"type\":\"Assessment\",\"relationName\":\"AssessmentToUser\"},{\"name\":\"accessLogs\",\"kind\":\"object\",\"type\":\"AccessLog\",\"relationName\":\"AccessLogToUser\"}],\"dbName\":\"users\"},\"Team\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"members\",\"kind\":\"object\",\"type\":\"TeamMember\",\"relationName\":\"TeamToTeamMember\"},{\"name\":\"assessments\",\"kind\":\"object\",\"type\":\"Assessment\",\"relationName\":\"AssessmentToTeam\"},{\"name\":\"reports\",\"kind\":\"object\",\"type\":\"TeamReport\",\"relationName\":\"TeamToTeamReport\"}],\"dbName\":\"teams\"},\"TeamMember\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"teamId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"joinedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TeamMemberToUser\"},{\"name\":\"team\",\"kind\":\"object\",\"type\":\"Team\",\"relationName\":\"TeamToTeamMember\"}],\"dbName\":\"team_members\"},\"Assessment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"teamId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"responses\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scores\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AssessmentToUser\"},{\"name\":\"team\",\"kind\":\"object\",\"type\":\"Team\",\"relationName\":\"AssessmentToTeam\"}],\"dbName\":\"assessments\"},\"TeamReport\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"teamId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"assessmentCycle\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"teamScore\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"baseScore\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"consistencyFactor\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"penaltyFactor\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"dimensionScores\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"participationRate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"generatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"team\",\"kind\":\"object\",\"type\":\"Team\",\"relationName\":\"TeamToTeamReport\"}],\"dbName\":\"team_reports\"},\"AccessLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resourceType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resourceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"timestamp\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AccessLogToUser\"}],\"dbName\":\"access_logs\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {}
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

