// Prisma Schema - 数据库设计

datasource db {
  provider = "sqlite"  // 使用SQLite，无需安装PostgreSQL，适合快速开始
  url      = "file:./dev.db"
}

generator client {
  provider = "prisma-client-js"
}

// 用户表
model User {
  id            String   @id @default(uuid())
  email         String   @unique
  passwordHash  String
  firstName     String
  lastName      String
  role          String   @default("MEMBER")  // MEMBER, TEAM_LEAD, ADMIN
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  teamMemberships TeamMember[]
  assessments     Assessment[]
  accessLogs      AccessLog[]
  
  @@map("users")
}

// 团队表
model Team {
  id          String   @id @default(uuid())
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  members     TeamMember[]
  assessments Assessment[]
  reports     TeamReport[]
  
  @@map("teams")
}

// 团队成员关系表
model TeamMember {
  id        String   @id @default(uuid())
  userId    String
  teamId    String
  role      String   @default("MEMBER")  // MEMBER, LEAD
  joinedAt  DateTime @default(now())
  
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  team Team @relation(fields: [teamId], references: [id], onDelete: Cascade)
  
  @@unique([userId, teamId])
  @@map("team_members")
}

// 评估记录表
model Assessment {
  id          String   @id @default(uuid())
  userId      String
  teamId      String
  responses   String   // JSON字符串: {"Q1": 4, "Q2": 5, ...}
  scores      String   // JSON字符串: {"dimensions": {...}, "total": 72.5}
  completedAt DateTime @default(now())
  
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  team Team @relation(fields: [teamId], references: [id], onDelete: Cascade)
  
  @@map("assessments")
}

// 团队报告表
model TeamReport {
  id                String   @id @default(uuid())
  teamId            String
  assessmentCycle   String   // 例如 "2025-Q4"
  teamScore         Float
  baseScore         Float
  consistencyFactor Float
  penaltyFactor     Float
  dimensionScores   String   // JSON字符串
  participationRate Float
  generatedAt       DateTime @default(now())
  
  team Team @relation(fields: [teamId], references: [id], onDelete: Cascade)
  
  @@map("team_reports")
}

// 访问日志表（隐私审计）
model AccessLog {
  id           String   @id @default(uuid())
  userId       String
  resourceType String   // "personal_report", "team_report"
  resourceId   String
  action       String   // "view", "export"
  ipAddress    String?
  timestamp    DateTime @default(now())
  
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("access_logs")
}
